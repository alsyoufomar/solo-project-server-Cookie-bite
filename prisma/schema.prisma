generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  username   String       @unique
  password   String
  email      String       @unique
  thread     Thread[]
  reply      Reply[]
  profile    Profile?
  favourites Favourites[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Profile {
  id        Int      @id @default(autoincrement())
  firstname String?
  lastname  String?
  avatarUrl String?
  bio       String?
  phone     String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id         Int          @id @default(autoincrement())
  url        String?
  image      String?
  title      String?
  location   String?
  genre      String?
  address    String?
  date       String?
  time       String?
  age        String?
  featured   Boolean?
  favourites Favourites[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Thread {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @unique
  reply     Reply[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reply {
  id        Int      @id @default(autoincrement())
  content   String
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @unique
  thread    Thread?  @relation(fields: [threadId], references: [id])
  threadId  Int?     @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Favourites {
  id        Int      @id @default(autoincrement())
  eventId   Int
  event     Event    @relation(fields: [eventId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//npx prisma generate , npx prisma migrate dev --create-only --skip-seed --name reviews , npx prisma migrate reset , npx prisma db seed
